goog.provide('fu.style');

goog.require('fu.env.runtime');
goog.require('goog.asserts');
goog.require('goog.dom.DomHelper');
goog.require('goog.math.Coordinate');


/**
 * @param {Element} el
 * @param {string} name
 * @param {number} duration
 */
fu.style.setAnimation = function(el, name, duration) {
  var css = name + ' ' + duration + 'ms 1';
  el.style['-webkit-animation-play-state'] = '';
  el.style['-webkit-animation-delay'] = 'now';
  el.style['-webkit-animation-timing-function'] = 'linear';
  el.style['-webkit-animation'] = css;
};


/**
 * @param {Element} el
 */
fu.style.removeAnimation = function(el) {
  el.style['-webkit-animation'] = '';
  el.style['-webkit-animation-play-state'] = '';
  el.style['-webkit-animation-timing-function'] = '';
};


/**
 * @param {Element} el
 */
fu.style.pauseAnimation = function(el) {
  el.style['-webkit-animation-play-state'] = 'paused';
};


/**
 * @param {Element} el
 * @param {number} x
 * @param {number} y
 */
fu.style.setTranslate3d = function(el, x, y) {
  goog.asserts.assert(fu.env.runtime.USE_WEBKIT_CSS3D);
  el.style['webkitTransform'] =
    'translate3d(' + x + 'px,' + y + 'px,0)';
};


/**
 * @param {Element} element
 * @param {number} duration
 * @param {string=} opt_function
 */
fu.style.setTransformTransition = function(element, duration, opt_function) {
  goog.asserts.assert(fu.env.runtime.USE_WEBKIT_TRANSITION);
  // The values of cubic-bezier(*) is generated by
  // http://matthewlein.com/ceaser/ which gives us natural-enough animation.
  element.style['webkitTransition'] = '-webkit-transform ' +
    Math.round(duration) +
    (opt_function || 'ms cubic-bezier(0, 0.02, 0.055, 1)');
};


/**
 * @param {Element} element
 */
fu.style.removeTransition = function(element) {
  goog.asserts.assert(fu.env.runtime.USE_WEBKIT_TRANSITION);
  // The values of cubic-bezier(*) is generated by
  // http://matthewlein.com/ceaser/ which gives us natural-enough animation.
  element.style['webkitTransition'] = '';
};


/**
 * @param {Element} element
 * @return {goog.math.Coordinate}
 */
fu.style.getTranslatePosition = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var dom = new goog.dom.DomHelper(doc);
  var win = dom.getWindow();
  var style = doc.defaultView.getComputedStyle(element, null);
  var CSSMatrix = /** @type {Function} */ (win['WebKitCSSMatrix']);
  var transform = new CSSMatrix(style['webkitTransform']);
  var x = parseFloat(transform['m41']);
  var y = parseFloat(transform['m42']);
  return new goog.math.Coordinate(x, y);
};